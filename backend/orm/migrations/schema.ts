import { pgTable, varchar, text, timestamp, integer, jsonb, unique, boolean, foreignKey, serial } from "drizzle-orm/pg-core"
  import { sql } from "drizzle-orm"



export const file_access_logs = pgTable("file_access_logs", {
	log_id: varchar("log_id", { length: 50 }).primaryKey().notNull(),
	file_id: varchar("file_id", { length: 50 }).notNull(),
	access_type: varchar("access_type", { length: 20 }).notNull(),
	user_id: varchar("user_id", { length: 50 }),
	ip_address: varchar("ip_address", { length: 45 }),
	user_agent: text("user_agent"),
	accessed_at: timestamp("accessed_at", { mode: 'string' }).defaultNow(),
});

export const files = pgTable("files", {
	file_id: varchar("file_id", { length: 50 }).primaryKey().notNull(),
	original_name: varchar("original_name", { length: 255 }).notNull(),
	stored_name: varchar("stored_name", { length: 255 }).notNull(),
	file_path: varchar("file_path", { length: 500 }).notNull(),
	file_size: integer("file_size").notNull(),
	mime_type: varchar("mime_type", { length: 100 }).notNull(),
	file_extension: varchar("file_extension", { length: 10 }),
	category: varchar("category", { length: 50 }),
	uploaded_by: varchar("uploaded_by", { length: 50 }),
	status: varchar("status", { length: 20 }).default('uploaded'::character varying),
	report_id: varchar("report_id", { length: 50 }),
	report_type: varchar("report_type", { length: 20 }),
	description: text("description"),
	metadata: jsonb("metadata"),
	created_at: timestamp("created_at", { mode: 'string' }).defaultNow(),
	updated_at: timestamp("updated_at", { mode: 'string' }).defaultNow(),
	scheduled_delete_at: timestamp("scheduled_delete_at", { mode: 'string' }),
});

export const company = pgTable("company", {
	id: varchar("id", { length: 128 }).primaryKey().notNull(),
	name: varchar("name", { length: 100 }).notNull(),
	code: varchar("code", { length: 20 }).notNull(),
	description: text("description"),
	address: varchar("address", { length: 255 }),
	contact: varchar("contact", { length: 50 }),
},
(table) => {
	return {
		company_code_unique: unique("company_code_unique").on(table.code),
	}
});

export const temp_file_sessions = pgTable("temp_file_sessions", {
	session_id: varchar("session_id", { length: 50 }).primaryKey().notNull(),
	file_ids: jsonb("file_ids").notNull(),
	created_at: timestamp("created_at", { mode: 'string' }).defaultNow(),
	expires_at: timestamp("expires_at", { mode: 'string' }).notNull(),
	status: varchar("status", { length: 20 }).default('active'::character varying),
	report_type: varchar("report_type", { length: 20 }),
});

export const accident_history = pgTable("accident_history", {
	accident_id: varchar("accident_id", { length: 50 }).primaryKey().notNull(),
	company_name: varchar("company_name", { length: 100 }),
	site_name: varchar("site_name", { length: 100 }),
	acci_time: timestamp("acci_time", { mode: 'string' }),
	acci_location: varchar("acci_location", { length: 255 }),
	is_contractor: boolean("is_contractor"),
	victim_belong: varchar("victim_belong", { length: 100 }),
	accident_type_level1: varchar("accident_type_level1", { length: 20 }),
	accident_type_level2: varchar("accident_type_level2", { length: 50 }),
	death_count: integer("death_count"),
	injured_count: integer("injured_count"),
	damage_cost: integer("damage_cost"),
	damage_severity: varchar("damage_severity", { length: 20 }),
	misc_classification: varchar("misc_classification", { length: 50 }),
	acci_summary: text("acci_summary"),
	direct_cause: text("direct_cause"),
	root_cause: text("root_cause"),
	injury_location_detail: varchar("injury_location_detail", { length: 100 }),
	corrective_actions: text("corrective_actions"),
	victim_return_date: timestamp("victim_return_date", { mode: 'string' }),
	investigation_status: varchar("investigation_status", { length: 20 }),
	investigation_start_time: timestamp("investigation_start_time", { mode: 'string' }),
	investigation_end_time: timestamp("investigation_end_time", { mode: 'string' }),
	investigator_signature: varchar("investigator_signature", { length: 100 }),
	legal_report_flag: varchar("legal_report_flag", { length: 20 }),
});

export const report_form_settings = pgTable("report_form_settings", {
	id: varchar("id", { length: 50 }).primaryKey().notNull(),
	report_type: varchar("report_type", { length: 20 }).notNull(),
	field_name: varchar("field_name", { length: 100 }).notNull(),
	is_visible: boolean("is_visible").default(true),
	is_required: boolean("is_required").default(false),
	display_order: integer("display_order").default(0),
	field_group: varchar("field_group", { length: 50 }),
	display_name: varchar("display_name", { length: 100 }),
	description: text("description"),
	grid_layout: jsonb("grid_layout").default({"h":1,"w":1,"x":0,"y":0}),
	layout_template: varchar("layout_template", { length: 50 }).default('compact'::character varying),
	group_cols: integer("group_cols").default(2),
	created_at: timestamp("created_at", { mode: 'string' }).defaultNow(),
	updated_at: timestamp("updated_at", { mode: 'string' }).defaultNow(),
});

export const site = pgTable("site", {
	id: varchar("id", { length: 128 }).primaryKey().notNull(),
	company_id: varchar("company_id", { length: 128 }).notNull().references(() => company.id, { onDelete: "cascade" } ),
	name: varchar("name", { length: 100 }).notNull(),
	code: varchar("code", { length: 20 }).notNull(),
	description: text("description"),
	address: varchar("address", { length: 255 }),
	contact: varchar("contact", { length: 50 }),
},
(table) => {
	return {
		site_code_unique: unique("site_code_unique").on(table.code),
	}
});

export const occurrence_report = pgTable("occurrence_report", {
	accident_id: varchar("accident_id", { length: 50 }).primaryKey().notNull(),
	global_accident_no: varchar("global_accident_no", { length: 50 }),
	acci_time: timestamp("acci_time", { mode: 'string' }),
	company_name: varchar("company_name", { length: 100 }),
	site_name: varchar("site_name", { length: 100 }),
	acci_location: varchar("acci_location", { length: 255 }),
	is_contractor: boolean("is_contractor"),
	victim_count: integer("victim_count"),
	accident_type_level1: varchar("accident_type_level1", { length: 20 }),
	accident_type_level2: varchar("accident_type_level2", { length: 50 }),
	acci_summary: text("acci_summary"),
	acci_detail: text("acci_detail"),
	scene_photos: text("scene_photos"),
	cctv_video: text("cctv_video"),
	statement_docs: text("statement_docs"),
	etc_documents: text("etc_documents"),
	first_report_time: timestamp("first_report_time", { mode: 'string' }),
	report_channel: varchar("report_channel", { length: 50 }),
	company_code: varchar("company_code", { length: 20 }),
	site_code: varchar("site_code", { length: 20 }),
	work_related_type: varchar("work_related_type", { length: 20 }),
	misc_classification: varchar("misc_classification", { length: 50 }),
	victims_json: text("victims_json"),
	contractor_name: varchar("contractor_name", { length: 100 }),
	reporter_name: varchar("reporter_name", { length: 100 }),
	reporter_position: varchar("reporter_position", { length: 100 }),
	reporter_belong: varchar("reporter_belong", { length: 100 }),
	created_at: timestamp("created_at", { mode: 'string' }).defaultNow(),
	updated_at: timestamp("updated_at", { mode: 'string' }).defaultNow(),
});

export const investigation_report = pgTable("investigation_report", {
	accident_id: varchar("accident_id", { length: 50 }).primaryKey().notNull().references(() => occurrence_report.accident_id),
	investigation_start_time: timestamp("investigation_start_time", { mode: 'string' }),
	investigation_end_time: timestamp("investigation_end_time", { mode: 'string' }),
	investigation_team_lead: varchar("investigation_team_lead", { length: 100 }),
	investigation_team_members: text("investigation_team_members"),
	investigation_location: varchar("investigation_location", { length: 255 }),
	original_global_accident_no: varchar("original_global_accident_no", { length: 50 }),
	investigation_global_accident_no: varchar("investigation_global_accident_no", { length: 50 }),
	original_accident_id: varchar("original_accident_id", { length: 50 }),
	investigation_accident_id: varchar("investigation_accident_id", { length: 50 }),
	original_acci_time: timestamp("original_acci_time", { mode: 'string' }),
	investigation_acci_time: timestamp("investigation_acci_time", { mode: 'string' }),
	original_acci_location: varchar("original_acci_location", { length: 255 }),
	investigation_acci_location: varchar("investigation_acci_location", { length: 255 }),
	original_accident_type_level1: varchar("original_accident_type_level1", { length: 20 }),
	investigation_accident_type_level1: varchar("investigation_accident_type_level1", { length: 20 }),
	original_accident_type_level2: varchar("original_accident_type_level2", { length: 50 }),
	investigation_accident_type_level2: varchar("investigation_accident_type_level2", { length: 50 }),
	original_acci_summary: text("original_acci_summary"),
	investigation_acci_summary: text("investigation_acci_summary"),
	original_acci_detail: text("original_acci_detail"),
	investigation_acci_detail: text("investigation_acci_detail"),
	original_victim_count: integer("original_victim_count"),
	investigation_victim_count: integer("investigation_victim_count"),
	original_victim_name_1: varchar("original_victim_name_1", { length: 100 }),
	investigation_victim_name_1: varchar("investigation_victim_name_1", { length: 100 }),
	original_victim_age_1: integer("original_victim_age_1"),
	investigation_victim_age_1: integer("investigation_victim_age_1"),
	original_victim_belong_1: varchar("original_victim_belong_1", { length: 100 }),
	investigation_victim_belong_1: varchar("investigation_victim_belong_1", { length: 100 }),
	original_is_contractor_1: varchar("original_is_contractor_1", { length: 10 }),
	investigation_is_contractor_1: varchar("investigation_is_contractor_1", { length: 10 }),
	original_contractor_name_1: varchar("original_contractor_name_1", { length: 100 }),
	investigation_contractor_name_1: varchar("investigation_contractor_name_1", { length: 100 }),
	original_victim_duty_1: varchar("original_victim_duty_1", { length: 100 }),
	investigation_victim_duty_1: varchar("investigation_victim_duty_1", { length: 100 }),
	original_injury_type_1: varchar("original_injury_type_1", { length: 50 }),
	investigation_injury_type_1: varchar("investigation_injury_type_1", { length: 50 }),
	original_ppe_worn_1: varchar("original_ppe_worn_1", { length: 50 }),
	investigation_ppe_worn_1: varchar("investigation_ppe_worn_1", { length: 50 }),
	original_first_aid_1: text("original_first_aid_1"),
	investigation_first_aid_1: text("investigation_first_aid_1"),
	investigation_scene_photos: text("investigation_scene_photos"),
	investigation_statement_docs: text("investigation_statement_docs"),
	investigation_etc_documents: text("investigation_etc_documents"),
	investigation_first_report_time: timestamp("investigation_first_report_time", { mode: 'string' }),
	investigation_report_channel: varchar("investigation_report_channel", { length: 50 }),
	investigation_work_related_type: varchar("investigation_work_related_type", { length: 20 }),
	damage_severity: varchar("damage_severity", { length: 20 }),
	death_count: integer("death_count"),
	injured_count: integer("injured_count"),
	damage_cost: integer("damage_cost"),
	injury_location_detail: varchar("injury_location_detail", { length: 100 }),
	victim_return_date: timestamp("victim_return_date", { mode: 'string' }),
	direct_cause: text("direct_cause"),
	root_cause: text("root_cause"),
	corrective_actions: text("corrective_actions"),
	action_schedule: varchar("action_schedule", { length: 100 }),
	action_verifier: varchar("action_verifier", { length: 100 }),
	investigation_photos: text("investigation_photos"),
	equipment_inspection_report: text("equipment_inspection_report"),
	witness_statements: text("witness_statements"),
	incident_flow_diagram: text("incident_flow_diagram"),
	investigation_conclusion: text("investigation_conclusion"),
	investigator_signature: varchar("investigator_signature", { length: 100 }),
	report_written_date: timestamp("report_written_date", { mode: 'string' }),
	investigation_status: varchar("investigation_status", { length: 20 }),
	investigation_summary: text("investigation_summary"),
	investigation_report_link: varchar("investigation_report_link", { length: 255 }),
	legal_report_flag: varchar("legal_report_flag", { length: 20 }),
	ra_number: varchar("ra_number", { length: 50 }),
	insurance_status: varchar("insurance_status", { length: 50 }),
	training_action_history: varchar("training_action_history", { length: 255 }),
});

export const victims = pgTable("victims", {
	victim_id: serial("victim_id").primaryKey().notNull(),
	accident_id: varchar("accident_id", { length: 50 }).notNull().references(() => occurrence_report.accident_id, { onDelete: "cascade" } ),
	name: varchar("name", { length: 100 }),
	age: integer("age"),
	belong: varchar("belong", { length: 100 }),
	duty: varchar("duty", { length: 100 }),
	injury_type: varchar("injury_type", { length: 100 }),
	ppe_worn: varchar("ppe_worn", { length: 100 }),
	first_aid: text("first_aid"),
	birth_date: timestamp("birth_date", { mode: 'string' }),
	created_at: timestamp("created_at", { mode: 'string' }).defaultNow(),
	updated_at: timestamp("updated_at", { mode: 'string' }).defaultNow(),
});